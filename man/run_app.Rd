% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_app.R
\name{run_app}
\alias{run_app}
\title{Run the Shiny Application}
\usage{
run_app(
  onStart = NULL,
  options = list(),
  enableBookmarking = NULL,
  uiPattern = "/",
  production_mode = NULL,
  ecrf_database_driver = RMariaDB::MariaDB(),
  ecrf_dbuser,
  ecrf_dbpassword,
  ecrf_dbhost,
  ecrf_dbname,
  config_database_driver = RMariaDB::MariaDB(),
  config_dbuser,
  config_dbpassword,
  config_dbhost,
  config_dbname,
  confirm_write_db = TRUE,
  start_as_admin = NULL,
  ...
)
}
\arguments{
\item{onStart}{A function that will be called before the app is actually run.
This is only needed for \code{shinyAppObj}, since in the \code{shinyAppDir}
case, a \code{global.R} file can be used for this purpose.}

\item{options}{Named options that should be passed to the \code{runApp} call
(these can be any of the following: "port", "launch.browser", "host", "quiet",
"display.mode" and "test.mode"). You can also specify \code{width} and
\code{height} parameters which provide a hint to the embedding environment
about the ideal height/width for the app.}

\item{enableBookmarking}{Can be one of \code{"url"}, \code{"server"}, or
\code{"disable"}. The default value, \code{NULL}, will respect the setting from
any previous calls to  \code{\link[shiny:enableBookmarking]{enableBookmarking()}}. See \code{\link[shiny:enableBookmarking]{enableBookmarking()}}
for more information on bookmarking your app.}

\item{uiPattern}{A regular expression that will be applied to each \code{GET}
request to determine whether the \code{ui} should be used to handle the
request. Note that the entire request path must match the regular
expression in order for the match to be considered successful.}

\item{production_mode}{Set production mode before running the package (usually this should be NULL).}

\item{ecrf_database_driver}{Set the database driver.}

\item{ecrf_dbuser}{Username of the database.}

\item{ecrf_dbname}{Name of the database.}

\item{config_database_driver}{Set the config database driver.}

\item{config_dbuser}{Username of the config database.}

\item{config_dbpassword}{Password of the config database.}

\item{config_dbhost}{Hostname of the config database.}

\item{config_dbname}{Name of the config database.}

\item{confirm_write_db}{TRUE if user input should be requested before writing local database files.}

\item{start_as_admin}{If TRUE, the user will have admin privileges without checking the user group. If FALSE, the user will never have admin privileges regardless of user group. If null, the software checks against the database, if the user is an admin.}

\item{...}{arguments to pass to golem_opts.
See `?golem::get_golem_options` for more details.}
}
\description{
Run the Shiny Application
}
